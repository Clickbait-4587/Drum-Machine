{"version":3,"sources":["components/bankOne.js","components/machine.js","App.js","serviceWorker.js","index.js"],"names":["bankOne","keyCode","keyTrigger","id","url","activeStyle","backgroundColor","width","height","marginBottom","transform","inactiveStyle","Pad","state","padStyle","handleKeyPress","e","props","playSound","activatePad","$","removeClass","setState","deactivatePad","addClass","padClip","console","log","text","sound","document","getElementById","currentTime","play","error","setTimeout","addEventListener","this","removeEventListener","className","onClick","style","src","clip","Component","Machine","currentBank","padBank","map","bank","index","bankArr","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.16cb757e.chunk.js","sourcesContent":["const bankOne = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: \"Q\",\r\n    id: \"kick-1\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20Kick%20(6).wav?alt=media&token=0b2eb997-d51a-4fa7-b00d-f22c2cfd9266\",\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: \"W\",\r\n    id: \"snare\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20Snare%20(4).wav?alt=media&token=2f6072e9-a1bd-4e42-ab89-d29dda91e429\",\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: \"E\",\r\n    id: \"hat-1\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20Hi%20Hat%20(3).wav?alt=media&token=f92ebde6-882a-437d-afc1-3b257b4a359f\",\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: \"A\",\r\n    id: \"808-1\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20808%20(6).wav?alt=media&token=1ff4af97-295e-4c5a-a0ca-375ec6c3cd48\",\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: \"S\",\r\n    id: \"clap-1\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20Clap%20(8).wav?alt=media&token=1070fa0c-9d77-4651-b3d7-7422f89f7aa8\",\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: \"D\",\r\n    id: \"kick-2\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20Kick%20(6).wav?alt=media&token=0b2eb997-d51a-4fa7-b00d-f22c2cfd9266\",\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: \"Z\",\r\n    id: \"clap-2\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20Clap%20(4).wav?alt=media&token=a47f0500-e7be-4de9-a875-fe532c4436a1\",\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: \"X\",\r\n    id: \"808-2\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20808%20(14).wav?alt=media&token=7587a72b-c376-4871-a3e5-84d92a217660\",\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: \"C\",\r\n    id: \"Hat-2\",\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/storage-dbbbf.appspot.com/o/Kits%2FMB%20Hi%20Hat%20(22).wav?alt=media&token=601b0e25-fe88-4a51-87cc-8aa073abe42b\",\r\n  },\r\n];\r\nexport default bankOne;\r\n","import React, { Component } from \"react\";\r\nimport bankOne from \"./bankOne\";\r\nimport $ from \"jquery\";\r\nconst activeStyle = {\r\n  backgroundColor: \"orange\",\r\n  width: \"100px\",\r\n  height: \"70px\",\r\n  marginBottom: \"5px\",\r\n  transform: \"scale(1.06)\",\r\n};\r\nconst inactiveStyle = {\r\n  width: \"100px\",\r\n  height: \"70px\",\r\n  marginBottom: \"5px\",\r\n};\r\n\r\nclass Pad extends Component {\r\n  state = {\r\n    padStyle: inactiveStyle,\r\n  };\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  handleKeyPress = (e) => {\r\n    if (e.keyCode === this.props.keyCode) {\r\n      this.playSound();\r\n    }\r\n  };\r\n\r\n  activatePad = () => {\r\n    $(`#${this.props.id}`).removeClass(\"darken-2\");\r\n    this.setState({\r\n      padStyle: activeStyle,\r\n    });\r\n  };\r\n  deactivatePad = () => {\r\n    $(`#${this.props.id}`).addClass(\"darken-2\");\r\n    this.setState({\r\n      padStyle: inactiveStyle,\r\n    });\r\n  };\r\n  playSound = () => {\r\n    let padClip = this.props.id;\r\n    console.log(padClip);\r\n    $(\"#display\").text(padClip);\r\n    const sound = document.getElementById(this.props.keyTrigger);\r\n    sound.currentTime = 0;\r\n    try {\r\n      sound.play();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    this.activatePad();\r\n    setTimeout(() => this.deactivatePad(), 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col s4 cov\">\r\n        <button\r\n          className=\"btn clip grey darken-2 col\"\r\n          id={this.props.id}\r\n          onClick={this.playSound}\r\n          style={this.state.padStyle}\r\n        >\r\n          {this.props.keyTrigger}\r\n          <audio\r\n            src={this.props.clip}\r\n            id={this.props.keyTrigger}\r\n            className=\"audio\"\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Machine extends Component {\r\n  state = {\r\n    padStyle: inactiveStyle,\r\n    currentBank: bankOne,\r\n  };\r\n\r\n  render() {\r\n    let padBank = this.state.currentBank.map((bank, index, bankArr) => {\r\n      return (\r\n        <Pad\r\n          clip={bank.url}\r\n          id={bank.id}\r\n          keyCode={bank.keyCode}\r\n          keyTrigger={bank.keyTrigger}\r\n          key={bank.keyCode}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"row z-depth-4\" id=\"drum-machine\">\r\n        {padBank}\r\n        <div id=\"display\" className=\"col\">\r\n          Display\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Machine;\r\n","import React from \"react\";\nimport Machine from \"./components/machine\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>The Drum Machine</h1>\n      <p>By Clickbait</p>\n      <Machine />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}